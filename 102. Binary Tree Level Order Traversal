class Solution:
    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        if root is None:
            return []
        que=deque([])
        que.append(root)
        ans=[]
        while que:
            n=len(que)
            k=[]
            for i in range(n):
                cur = que.popleft()
                k.append(cur.val)
                if cur.left is not None:
                    que.append(cur.left)
                if cur.right is not None:
                    que.append(cur.right)
            ans.append(copy.deepcopy(k))
        return ans
